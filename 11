import pygame as pygame
from random import randint

pygame.init()
# Задаем дисплей
side = 20
w = 17
h = 17
DISPLAYSURF = pygame.display.set_mode((w * side, h * side))
# Задаем цвета 
orange = (255, 164, 116)
WHITE = (255, 255, 255) 
RED = (194, 0, 13)

game_running = 0

dirs = [pygame.K_RIGHT, pygame.K_DOWN, pygame.K_LEFT, pygame.K_UP]
dx = [1, 0, -1, 0]
dy = [0, 1, 0, -1]
snake = [(7, 3), (7, 4)]
direction = 0


def place_apple():
    a = (randint(0, w - 1), randint(0, h - 1))
    while a in snake:
        a = (randint(0, w - 1), randint(0, h - 1))
    return a


apple = place_apple()


def check_collisions():
    head = snake[-1]
    for i in range(len(snake) - 1):
        if head == snake[i]:
            return 2
    if head[0] >= w or head[0] < 0:
        return 3
    if head[1] >= h or head[1] < 0:
        return 3
    if head == apple:
        return 1
    return 0


clock = pygame.time.Clock()
f = pygame.font.SysFont('Avenir Heavy', 50, True)
tick = 4
while True:
        clock.tick(4)
        for e in pygame.event.get():
            if e.type == pygame.QUIT:
                pygame.quit()
                break
            if e.type == pygame.KEYDOWN:
                if game_running == 0:
                    game_runnig = 1
                if e.key == pygame.K_SPACE:
                    game_running = 0
                    snake = [(7, 3), (7, 4)]
                    direction = 0
                    apple = place_apple() 
                if e.key == pygame.K_RIGHT:
                    direction = 0
                if e.key == pygame.K_DOWN:    
                  direction = 1
                if e.key == pygame.K_LEFT:    
                    direction = 2
                if e.key == pygame.K_UP:    
                    direction = 3
           
        if game_running == 2:
            text1 = f.render("game over: " + str(len(snake)) - 3, 1, (167, 54, 33))
            DISPLAYSURF.fill(orange)
            DISPLAYSURF.bilt(text1, 0, 0)
            pygame.display.update()
            game_running = 3
        if game_running == 3:
            continue
        
        snake.append((snake[-1][0] + dx[direction], snake[-1][1] + dy[direction]))
        collision = check_collisions()
        if(collision > 2):
            
            game_running == 2
        elif collision == 1:
            apple = place_apple()
        else:
            snake.pop(0)
        DISPLAYSURF.fill(orange)
        for i in range(len(snake)):
            pygame.draw.rect(DISPLAYSURF, WHITE, pygame.Rect(snake[i][0] * side, snake[i][1] * side, side, side))
        pygame.draw.rect(DISPLAYSURF, RED, pygame.Rect(apple[0] *side, apple[1] *side, side, side))
        pygame.display.update()
          
